// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
package news.service.v1;

// NOTE: 最后请删除这些无用的注释 (゜-゜)つロ

option go_package = "api";
option (gogoproto.goproto_getters_all) = false;

service News {
  rpc Ping(.google.protobuf.Empty) returns (.google.protobuf.Empty);
  rpc GetNewsInfoById(IdReq) returns (NewsInfoResp) {
    option (google.api.http) = {
        get: "/news/news-info"
      };
  };
  rpc GetNews(.google.protobuf.Empty) returns (NewsResp) {
      option (google.api.http) = {
          get: "/news/all"
        };
    };
}

message IdReq {
  int64 id = 1 [(gogoproto.moretags) = 'form:"id" validate:"required"'];
}

message NewsInfoResp {
  int64 id = 1 [(gogoproto.jsontag) = 'id'];
  string title = 2 [(gogoproto.jsontag) = 'title'];
  string content = 3 [(gogoproto.jsontag) = 'content'];
}

message NewsResp {
    message Info {
      int64 id = 1 ;
      string title = 2 ;
      string content = 3 ;
    }
    repeated Info news = 1;
}
